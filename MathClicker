<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Clicker Game</title>
<style>
  body {
    font-family: Arial, sans-serif;
    margin: 0;
    height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background-image: url('YOUR_CARTOON_LOGS_IMAGE_URL_HERE');
    background-repeat: repeat;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }
  #score-container {
    position: absolute;
    top: 0;
    left: 20px;
    font-size: 3em;
    font-weight: bold;
  }
  #clicker-button {
    font-size: 8em;
    padding: 60px;
  }
  #upgrades-container {
    position: absolute;
    bottom: 0;
    width: 100%;
    background-color: #f8f8f8;
    border-top: 1px solid #ccc;
    overflow-y: auto;
    max-height: 100px;
  }
  #toggle-upgrades {
    background: #ddd;
    color: #333;
    padding: 5px 10px;
    cursor: pointer;
    text-align: center;
  }
  button {
    font-size: 1.5em;
    padding: 15px;
    margin: 5px;
    border-radius: 20px; /* Rounded corners for buttons */
  }
  .points-popup {
    position: fixed;
    font-size: 2em;
    animation: fadeOut 2s forwards;
    pointer-events: none;
  }
  @keyframes fadeOut {
    to {
      opacity: 0;
    }
  }
  /* Style for the top right buttons container */
  #top-right-buttons {
    position: absolute;
    top: 20px;
    right: 20px;
  }
</style>
</head>
<body>
<div id="score-container">Score: <span id="score">0</span></div>
<button id="clicker-button" onclick="updateScore(event)">üëç</button>
<div id="toggle-upgrades" onclick="toggleUpgrades()">Toggle Upgrades</div>
<div id="upgrades-container">
  <!-- Upgrades will be dynamically added here -->
</div>

<!-- Container for top right buttons -->
<div id="top-right-buttons">
  <button id="reset-button" onclick="resetGame()">Reset</button>
  <button id="smiley-button" onclick="changeEmoji('üòä')">üòä</button>
  <button id="thumbs-up-button" onclick="changeEmoji('üëç')">üëç</button>
  <button id="cowboy-button" onclick="changeEmoji('ü§†')">ü§†</button>
  <button id="cool-button" onclick="changeEmoji('üòé')">üòé</button>
  <button id="crying-button" onclick="changeEmoji('üò¢')">üò¢</button>
</div>
  let score = 0;
  let scorePerClick = 1;
  let autoClickerInterval;
  const scoreDisplay = document.getElementById('score');
  const clickerButton = document.getElementById('clicker-button');
  const upgradesContainer = document.getElementById('upgrades-container');
  let upgradesVisible = true;

  // Function to update the score
  function updateScore(event) {
    score += scorePerClick;
    scoreDisplay.textContent = score;
    showPointsPopup(scorePerClick, event);
  }

  // Function to add upgrades
  function addUpgrade(name, cost, effect) {
    const upgrade = document.createElement('button');
    upgrade.textContent = `${name} - Cost: ${cost}`;
    upgrade.onclick = function() {
      if (score >= cost) {
        score -= cost;
        effect();
        upgrade.remove();
      } else {
        console.log('Not enough score to purchase this upgrade.');
      }
    };
    upgradesContainer.appendChild(upgrade);
  }

  // Add upgrades that double the points per click
  let upgradeCost = 2;
  for (let i = 1; i <= 50; i++) {
    addUpgrade(`Double Points ${i}`, upgradeCost, function() {
      scorePerClick *= 2;
      console.log(`Double Points ${i} upgrade purchased!`);
    });
    upgradeCost *= 50;
  }

  // Function to show points popup where the cursor is
  function showPointsPopup(points, event) {
    const popup = document.createElement('div');
    popup.textContent = `+${points}`;
    popup.classList.add('points-popup');
    document.body.appendChild(popup);

    // Position the popup where the cursor is
    popup.style.top = `${event.clientY}px`;
    popup.style.left = `${event.clientX}px`;

    // Remove the popup after 2 seconds
    setTimeout(() => {
      popup.remove();
    }, 2000);
  }

  // Function to toggle the visibility of the upgrades
  function toggleUpgrades() {
    upgradesVisible = !upgradesVisible;
    upgradesContainer.style.maxHeight = upgradesVisible ? '100px' : '0';
  }

  // Function to reset the game
  function resetGame() {
    score = 0;
    scorePerClick = 1;
    scoreDisplay.textContent = score;
    clearInterval(autoClickerInterval);
    autoClickerInterval = null;
    console.log('Game has been reset.');
  }

  // Function to change the clicker button to different emojis
  function changeEmoji(emoji) {
    clickerButton.textContent = emoji;
  }
  // ... (rest of your existing script)

  let clickCount = 0; // New variable to keep track of the number of clicks

  // Modified updateScore function
  function updateScore(event) {
    clickCount++;
    if (clickCount % 15 === 0) {
      // Every 15 clicks, prompt the user with a multiplication question
      let num1 = Math.floor(Math.random() * 10); // Random single-digit number
      let num2 = Math.floor(Math.random() * 10); // Random single-digit number
      let userAnswer = prompt(`What is ${num1} x ${num2}?`);
      let correctAnswer = num1 * num2;
      if (parseInt(userAnswer) === correctAnswer) {
        // If the answer is correct, update the score
        score += scorePerClick;
        scoreDisplay.textContent = score;
        showPointsPopup(scorePerClick, event);
      } else {
        alert('Oops! That is not correct. Try again!');
      }
    } else {
      // If not a 15th click, update the score as usual
      score += scorePerClick;
      scoreDisplay.textContent = score;
      showPointsPopup(scorePerClick, event);
    }
  }

  // ... (rest of your existing script)
</script>
</body>
</html>
